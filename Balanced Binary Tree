/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isBalanced(TreeNode root) {
        
        if(root==null)
        return true;

        int leftHeight=heightTree(root.left);
        int rightHeight=heightTree(root.right);

        if(Math.abs(leftHeight-rightHeight)>1){
            return false;
        }

        boolean left=isBalanced(root.left);
        boolean right=isBalanced(root.right);
    
       if(!left||!right)return false;

        return true;

        
    }

    public int heightTree(TreeNode root){
        if(root==null)
        return 0;

        int left= heightTree(root.left);
        int right= heightTree(root.right);

        return 1+Math.max(left,right);

    }
}
