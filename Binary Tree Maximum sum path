/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int maxPathSum(TreeNode root) {
          if(root==null)
          return 0;
         
         int[] val= new int[2];
         val[0]=Integer.MIN_VALUE;
          maxSum(root,val);
          return val[0];

    }

    public int maxSum(TreeNode root,int[] val){
          if(root==null)
          return 0;

          int leftSum=Math.max(0,maxSum(root.left,val));
          int rightSum=Math.max(0,maxSum(root.right,val));
          val[0]=Math.max(val[0],(root.val+leftSum+rightSum));
          return root.val+Math.max(leftSum,rightSum);

    }
}
