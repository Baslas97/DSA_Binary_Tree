/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        Queue<TreeNode> queue= new LinkedList<>();

        List<List<Integer>> list= new ArrayList<>();
        
        if(root==null)
        return list;

        queue.offer(root);
       Boolean lefttoright=true;
       while(!queue.isEmpty()){
         int size=queue.size();
         LinkedList<Integer> level= new LinkedList<>();

         for(int i=0;i<size;i++){
            TreeNode node= queue.poll();
            if(lefttoright)
            level.addLast(node.val);
            else
            level.addFirst(node.val);

            if(node.left!=null)
            queue.offer(node.left);
            if(node.right!=null)
            queue.offer(node.right);

         }
        list.add(level);
        lefttoright=!lefttoright;
       }
      return list;
    }
}
