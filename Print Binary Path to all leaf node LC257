/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> list = new ArrayList<String>();
        if(root==null)
        return list;

        String str="";
        treePaths(root,str,list);
        return list;

    }

    private void treePaths(TreeNode root,String  str,List<String> list){
        if(root==null)
        return;
       
       str+=root.val;

       if(root.left==null&&root.right==null)
       {
        list.add(str);
        return;
       }
       str+="->";
        treePaths(root.left,str,list);
        treePaths(root.right,str,list);
    }
}
