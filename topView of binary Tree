/*
class Node{
    int data;
    Node left;
    Node right;
    Node(int data){
        this.data = data;
        left=null;
        right=null;
    }
}
*/

class Solution {
    // Function to return a list of nodes visible from the top view
    // from left to right in Binary Tree.
    static ArrayList<Integer> topView(Node root) {
        // code here
        Queue<Pair> q= new LinkedList<>();
        ArrayList<Integer> list= new ArrayList<>();
        if(root==null)
        return list;
        Map<Integer,Integer> map = new TreeMap<>();
        q.offer(new Pair(root,0));
        
        while(!q.isEmpty()){
            Pair it= q.remove();
            int hd= it.col;
            Node temp=it.root;
            
            if(map.get(hd)==null){
                map.put(hd,temp.data);
            }
            if(temp.left!=null)
              q.add(new Pair(temp.left,hd-1));
              
            if(temp.right!=null)
              q.add(new Pair(temp.right,hd+1));
            
        }
        
        for(Map.Entry<Integer,Integer> entry:map.entrySet()){
            list.add(entry.getValue());
        }
        
        return list;
    }
}

  class Pair{
    Node root;
    int col;
    
    public Pair(Node root, int col){
        this.root=root;
        this.col=col;
    }
}
